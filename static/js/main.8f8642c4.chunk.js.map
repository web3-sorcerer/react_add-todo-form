{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","articleClassName","completed","title","TodoList","todos","map","todosWithAssociatedUsers","userId","fetchedUsers","find","App","useState","todoItems","setTodoItems","formValues","setFormValues","isValidTitle","setIsValidTitle","isValidUser","setIsValidUser","displayTitleError","setDisplayTitleError","displayUserError","setDisplayUserError","onSubmit","event","preventDefault","selectedUser","newId","sort","a","b","prevTodos","action","method","type","placeholder","value","onChange","target","trimStart","prevValues","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8f8642c4.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { UserInfoProps } from '../../types';\n\nexport const UserInfo = ({ user }: UserInfoProps) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user?.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import { TodoInfoProps } from '../../types';\nimport { UserInfo } from '../UserInfo';\n\nexport const TodoInfo = ({ todo }: TodoInfoProps) => {\n  const articleClassName = `TodoInfo ${todo.completed ? 'TodoInfo--completed' : ''}`;\n\n  return (\n    <article data-id={todo.id} className={articleClassName}>\n      <h2 className=\"TodoInfo__title\">{todo.title}</h2>\n      {todo.user ? <UserInfo user={todo.user} /> : <p>No user found</p>}\n    </article>\n  );\n};\n","import { TodoListProps } from '../../types';\nimport { TodoInfo } from '../TodoInfo';\n\nexport const TodoList = ({ todos }: TodoListProps) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","import React, {\n  ChangeEvent, FormEvent, useState,\n} from 'react';\nimport fetchedUsers from './api/users';\nimport fetchedTodos from './api/todos';\nimport { User } from './types';\nimport { TodoList } from './components/TodoList';\nimport './App.scss';\n\nconst todosWithAssociatedUsers = fetchedTodos.map(todo => ({\n  ...todo,\n  user: fetchedUsers.find(user => user.id === todo.userId),\n}));\n\nexport const App = () => {\n  const [todoItems, setTodoItems] = useState(todosWithAssociatedUsers);\n  const [formValues, setFormValues] = useState({ title: '', user: '' });\n  const [isValidTitle, setIsValidTitle] = useState(false);\n  const [isValidUser, setIsValidUser] = useState(false);\n  const [displayTitleError, setDisplayTitleError] = useState(false);\n  const [displayUserError, setDisplayUserError] = useState(false);\n\n  const handleTitleInputChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const value = event.target.value.trimStart();\n\n    setDisplayTitleError(!!value);\n    setIsValidTitle(!!value);\n\n    setFormValues(prevValues => ({\n      ...prevValues,\n      title: value,\n    }));\n  };\n\n  const handleSelectChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    setDisplayUserError(!!value);\n    setIsValidUser(!!value);\n\n    setFormValues(prevValues => ({\n      ...prevValues,\n      user: value,\n    }));\n  };\n\n  const handleSubmit = (event: FormEvent) => {\n    event.preventDefault();\n\n    if (!isValidTitle || !isValidUser) {\n      if (!isValidTitle) {\n        setDisplayTitleError(true);\n      }\n\n      if (!isValidUser) {\n        setDisplayUserError(true);\n      }\n\n      return;\n    }\n\n    const selectedUser = fetchedUsers.find(\n      user => user.name === formValues.user,\n    ) as User;\n\n    const newId = ([...todoItems].sort(\n      (a, b) => b.id - a.id,\n    )[0].id + 1);\n\n    setTodoItems(prevTodos => ([\n      ...prevTodos,\n      {\n        id: newId,\n        title: formValues.title,\n        completed: false,\n        userId: selectedUser.id,\n        user: selectedUser,\n      },\n    ]));\n\n    setFormValues({\n      title: '',\n      user: '',\n    });\n\n    setIsValidTitle(false);\n    setIsValidUser(false);\n    setDisplayTitleError(false);\n    setDisplayUserError(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n      <form\n        onSubmit={handleSubmit}\n        action=\"/api/todos\"\n        method=\"POST\"\n      >\n        <div className=\"field\">\n          <label>\n            {'Title: '}\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={formValues.title}\n              onChange={handleTitleInputChange}\n            />\n            {\n              (displayTitleError && !isValidTitle)\n              && <span className=\"error\">Please enter a title</span>\n            }\n          </label>\n        </div>\n\n        <div className=\"field\">\n          <label>\n            {'User: '}\n            <select\n              id=\"userSelect\"\n              data-cy=\"userSelect\"\n              value={formValues.user}\n              onChange={handleSelectChange}\n            >\n              <option value=\"\" disabled>Choose a user</option>\n              {\n                fetchedUsers.map(user => (\n                  <option key={user.id} value={user.name}>{user.name}</option>\n                ))\n              }\n            </select>\n            {\n              (displayUserError && !isValidUser)\n              && <span className=\"error\">Please choose a user</span>\n            }\n          </label>\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todoItems} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}